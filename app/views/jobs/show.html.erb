<%
scope = Job
scope = scope.scoped :conditions => {:job_id => params['id']} if params['id']
scope = scope.scoped :conditions => {:supplier_id => params['supplier_id']} if params['supplier_id']
@jobs = scope.paginate :include => :supplier,
                     :page => params[:page],
                     :order => 'created_at DESC'
%>

<div style="background: #FFD">
<%= render :file => 'jobs/index.html.erb' %>
</div>

<p>
  <b>Job</b>
  <%=h link_to @job.try(:title), supplier_job_path(@job.supplier, @job) %>
</p>

<p>
  <b>Description:</b>
  <%= h @job.description %>
</p>

<p>
  <b>Jobable:</b>
  <%= link_to("Настройки #{@job.jobable.class.to_s}", edit_polymorphic_path([@job.supplier, @job, @job.jobable])) %>  
</p>

<p>
  <b>File mask:</b>
  <%=h @job.file_mask %>
</p>

<p>
  <b>Locked:</b>
  <%=h @job.locked %>
</p>

<p>
  <b>Active:</b>
  <%=h @job.active %>
</p>
<p>
  <b>Next start:</b>
  <%=h @job.next_start %>
</p>

<p>
  <b>Last start:</b>
  <%=h @job.last_start %>
</p>

<p>
  <b>Last finish:</b>
  <%=h @job.last_finish %>
</p>


<div style="background: #FFD">
<b>Ручная загрузка прайса:</b>
<%= semantic_form_for(SupplierPrice.new, :html => { :multipart => true }, :url => supplier_job_supplier_prices_path(params[:supplier_id], params[:id])) do |f| %>
  <%= f.error_messages %>

    <%= f.inputs :attachment %>

    <%= check_box_tag("force", value = "1", checked = false, options = {}) %>
    Force start? 

    <%= f.buttons %>
<% end %>
</div>
<p>
<%= link_to 'Destroy', supplier_job_path(params[:supplier_id], @job), :confirm => 'Are you sure?', :method => :delete %> |
<%= link_to 'Edit', edit_supplier_job_path(params[:supplier_id], @job) %> |
<%= link_to 'Start', start_supplier_job_path(params[:supplier_id], @job) %> |
<%= link_to 'Force Start', start_supplier_job_path(@job.supplier, @job, :force => true) %> |
<%= link_to 'Unlink', polymorphic_path([Supplier.find(params[:supplier_id]), Job.find(params[:id]), Job.find(params[:id]).jobable]), :confirm => 'Are you sure?', :method => :delete %>
</p>

<div style="background: #FFD">
  <% if [ImportJob, ReplaceJob].include? @job.jobable.class%>
    
    <%= link_to 'Очистить прайсы-цены и временную', clean_supplier_job_path(params[:supplier_id], @job) %>
    <br /><br />
    <% 
      query = "SELECT processed, COUNT(*) as count FROM price_import_#{params[:id]} GROUP BY processed"
      ActiveRecord::Base.connection.execute(query).each do |row|
        if row[0] == 1
        %>
          Обработано: <%= row[1] %>
        <%  
        elsif row[0] == 0
        %>
          Не обработано: <%= row[1] %>
        <%
        end
      end
    %>

    <br /><br />


    <% xm = Builder::XmlMarkup.new
    xm.table {
      query = "DESCRIBE price_import_#{@job.id}"
      header = ActiveRecord::Base.connection.execute(query, {:as => :hash}).map{|line| line[0]}
      xm.tr {header.each {|value| xm.th(value)}}
      query = "SELECT * FROM price_import_#{@job.id} LIMIT 20"
      ActiveRecord::Base.connection.execute(query).each_with_index do |line, index|
        xm.tr {line.each {|value| xm.td(value)} }
      end
    } %>
    <%= raw xm.target %>
    <br />
    <%= query %>
  <% else %>

    <table style="width: 100%">
      <% SupplierPrice.all(:order => 'id DESC', :conditions => {:job_id => @job.id}).each do |sp| %>
        <tr style="background: #<%= Digest::MD5.hexdigest(sp.group_code.to_s)[0...6] if sp.group_code.present? %>"><td>
        <%= link_to(sp.attachment_file_name, supplier_price_path(sp.id)) %> |
        <%= link_to "Download", sp.attachment.url(:original, false) %> |
        <%= link_to 'Destroy', supplier_job_supplier_price_path(params[:supplier_id], params[:id], sp), :confirm => 'Are you sure?', :method => :delete %> |
        <%= sp.attachment_updated_at.to_s %> |
        <%= sp.attachment_file_size.to_s %><br />
        <%= sp.attachment.path %><br />
        wc: <%= sp.wc_stat %><br />
        </td></tr>
      <% end %>
    </table>

  <% end %>
</div>

<br/>
